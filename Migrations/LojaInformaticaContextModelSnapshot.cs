// <auto-generated />
using LojaInformatica.Db.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LojaInformatica.Migrations
{
    [DbContext(typeof(LojaInformaticaContext))]
    partial class LojaInformaticaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("LojaInformatica.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ChaveDeAcesso");

                    b.Property<string>("Email");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("LojaInformatica.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataDaCompra");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("LojaInformatica.Models.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ProdutoId");

                    b.Property<string>("URL");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("LojaInformatica.Models.ItemDaCompra", b =>
                {
                    b.Property<int>("CompraId");

                    b.Property<int>("ProdutoId");

                    b.Property<decimal>("PrecoUnitario");

                    b.Property<int>("Quantidade");

                    b.HasKey("CompraId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemDaCompra");
                });

            modelBuilder.Entity("LojaInformatica.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int?>("ImagemPrincipalId");

                    b.Property<string>("Nome");

                    b.Property<decimal>("Preco");

                    b.HasKey("Id");

                    b.HasIndex("ImagemPrincipalId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("LojaInformatica.Models.Imagem", b =>
                {
                    b.HasOne("LojaInformatica.Models.Produto")
                        .WithMany("Imagens")
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("LojaInformatica.Models.ItemDaCompra", b =>
                {
                    b.HasOne("LojaInformatica.Models.Compra", "Compra")
                        .WithMany("ItensDaCompra")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LojaInformatica.Models.Produto", "Produto")
                        .WithMany("ItemComprados")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LojaInformatica.Models.Produto", b =>
                {
                    b.HasOne("LojaInformatica.Models.Imagem", "ImagemPrincipal")
                        .WithMany()
                        .HasForeignKey("ImagemPrincipalId");
                });
#pragma warning restore 612, 618
        }
    }
}
